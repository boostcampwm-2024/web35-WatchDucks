name: Deploy Service

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      path:
        required: true
        type: string
    secrets:
      host:
        required: true
      user:
        required: true
      key:
        required: true
      port:
        required: true
      env:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Sparse checkout으로 하위 디렉토리만 체크아웃
      - name: Checkout repository with sparse checkout
        uses: actions/checkout@v3
        with:
          path: ${{ inputs.service }}
          fetch-depth: 0
          sparse-checkout: |
            ${{ inputs.path }}

      # 2. GHCR 로그인
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. 도커 이미지 빌드 & 푸시
      - name: Build and push Docker image for ${{ inputs.service }}
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ inputs.service }}/${{inputs.path}}:${TAG} ./${{inputs.service}}/${{inputs.path}}
          docker push ghcr.io/${{ github.repository_owner }}/${{ inputs.service }}/${{inputs.path}}:${TAG}
          docker tag ghcr.io/${{ github.repository_owner }}/${{ inputs.service }}/${{inputs.path}}:${TAG} ghcr.io/${{ github.repository_owner }}/${{ inputs.service }}/${{inputs.path}}:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ inputs.service }}/${{inputs.path}}:latest

      # 4. 각 서비스 서버에 배포
      - name: Deploy ${{ inputs.service }} to server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.host }}
          username: ${{ secrets.user }}
          key: ${{ secrets.key }}
          port: ${{ secrets.port }}
          script: |
            cd /home/watchducks/app
            cat <<EOF > .env
            ${{ secrets.env }}
            EOF
            docker pull ghcr.io/${{ github.repository_owner }}/${{ inputs.service }}/${{inputs.path}}:latest
            if docker-compose up -d; then
              echo "Deployment successful"
            else
              echo "Deployment failed, rolling back"
              docker-compose down
              docker pull ghcr.io/${{ github.repository_owner }}/${{ inputs.service }}/${{inputs.path}}:previous-tag
              docker-compose up -d
              exit 1
            fi